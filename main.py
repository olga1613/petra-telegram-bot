import os
import requests
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏–¥–∞ –≤ Bitrix24
def send_to_bitrix(name, phone, email, comment):
    url = "https://b24-lvtdlr.bitrix24.ru/rest/1/r58xfu33csoc2m4y/crm.lead.add.json"
    data = {
        "fields": {
            "NAME": name,
            "PHONE": [{"VALUE": phone}],
            "EMAIL": [{"VALUE": email}],
            "COMMENTS": comment,
            "SOURCE_ID": "WEB"
        }
    }

    try:
        response = requests.post(url, json=data)
        response.raise_for_status()
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Bitrix:", e)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    message_text = update.message.text

    name = user.full_name or "Telegram User"
    phone = "+79998887766"  # –ú–æ–∂–µ–º –ø–æ–∑–∂–µ —Å–¥–µ–ª–∞—Ç—å —Å–±–æ—Ä —á–µ—Ä–µ–∑ —ç—Ç–∞–ø—ã
    email = "telegram@user.com"  # –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≥–ª—É—à–∫–æ–π
    comment = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message_text}"

    send_to_bitrix(name, phone, email, comment)

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üí¨")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    handler = MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message)
    app.add_handler(handler)
    app.run_polling()
